volumes:
  mongo_data:
  pg_grafana:
    driver: local
  grafana:
    driver: local
  pg_data_wh:
    driver: local
  pgadmin-data:
    driver: local

services:
  rabbitmq:
    image: masstransit/rabbitmq:latest
    ports:
     - "5672:5672"
     - "15672:15672"
     - "15692:15692"

  api:
    build:
      context: .
      dockerfile: Dockerfile-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
     - "8080:8080"
    depends_on:
      rabbitmq:
        condition: service_started

  main:
    build:
      context: .
      dockerfile: Dockerfile-main
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      rabbitmq:
        condition: service_started
        

  mongo:
    restart: always
    image: mongo
    ports:
      - 27017:27017
    volumes:
      - mongo_data:/data/mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    expose:
      - 27017
 
 
  mongo-express:
    image: mongo-express
    depends_on:
        - mongo
    ports:
      - "8888:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      ME_CONFIG_BASICAUTH: false


  lgtm:
      image: grafana/otel-lgtm
      volumes:
        - "grafana:/var/lib/grafana"
      ports:
        - '4317:4317'
        - '4318:4318'
        - '3000:3000'
        - '3100:3100'
